import java.util.ArrayList;

public class Airport
{
    /** A list of the flights into and out of this airport
     *  Guaranteed not to be null and to contain only non-null entries
     */
    private ArrayList<Flight> allFlights;

    public Airport(ArrayList<Flight> flights)
    {
        allFlights = flights;
    }

    public ArrayList<Flight> getAllFlights()
    {
        return allFlights;
    }

    /** Returns the revenue generated by all flights at the airport,
     *  as described in part (a)
     */
    public double getTotalRevenue()
    {
        double total=0.0;
        for(Flight flight:allFlights){
            if(flight.getCapacity()<flight.getNumPassengers()){
                total+=flight.getCapacity()*flight.getPrice();
            }
            else{total+=flight.getPrice()*flight.getNumPassengers();}
        }
        return total;
    }

    /** Updates the list of flights by removing certain flights and
     *  returns the total number of passengers whose flights were removed,
     *  as described in part (b)
     */
    public int updateFlights()
    {
        int numRemoved=0;

        for(int i=0;i<allFlights.size();i++){
            int numPassengers=allFlights.get(i).getNumPassengers();
            int capacity=allFlights.get(i).getCapacity();
            if(numPassengers<(.2*capacity)){
                numRemoved+= allFlights.remove(i).getNumPassengers();
            }
        }
        return numRemoved;
    }
}